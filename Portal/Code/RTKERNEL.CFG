/**************************************************************************/
/*                                                                        */
/*  Module:  RTKernel (Configuration)              Copyright (c) 1989,94  */
/*  Version: 4.5                                 On Time Informatik GmbH  */
/*                                                                        */
/*                                                                        */
/*                                      On Time        /úúúúúúúúúúú/ÄÄÄÄÄ */
/*                                    Informatik GmbH /úúúúúúúúúúú/       */
/* ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ/úúúúúúúúúúú/        */
/*                                  Echtzeit- und Systemsoftware          */
/*                                                                        */
/**************************************************************************/

/* RealTime Multitasking Kernel for the programming language C.

   This header file contains some configuration information for RTKernel.
   Do not change any of the parameters below unless you have the RTKernel
   source code and have recompiled RTKernel with the new settings.

   A number of preprocessor symbols are used to configure RTKernel. They
   are described below. You may change these symbols in this file
   or on the compiler command line to change some RTKernel parameters.
   If you do not have the RTKernel source code, the default value for
   each parameter applies.

   MAX_PRIO   (default: 64)
   MAX_PRIO defines the number of priorities available to user tasks. The
   less priorities you use (regardless of how many are available), the faster
   RTKernel will operate. Unused priorities waste some memory (4 or 8 bytes
   per priority).

   RTK_LOCAL_TCB  (default: 0 (False))
   With RTK_LOCAL_TCB=1, all TCBs are statically allocated in the near data
   segment. In this case, symbol MAXTASKS must also be defined to tell
   RTKernel how many tasks at most will exist at any one time. With
   RTK_LOCAL_TCB=1, RTKernel can use near pointers as task handles
   increasing its speed significantly in the far data models. The drawback is
   that you need to specify the maximum number of tasks in your program and
   that space for unused TCBs is wasted.

   MAXTASKS  (default: 0)
   MAXTASKS has an effect only if RTK_LOCAL_TCB=1. It defines the number
   of TCBs statically allocated. Please note that all TCBs must fit
   in the near data segment (with Borland C, huge model, TCBs are in the
   module-private data segment). With RTK_LOCAL_TCB set to 0 (default), the
   number of tasks is not limited.

   DEBUG  (default: 1 (True))
   Symbol DEBUG controls generation of a Debug-Version. To compile
   a speed-optimized Standard-Version, you must set DEBUG to 0
   (i.e. on the command line).

   RTKernel in embedded systems applications:
   ------------------------------------------

   The only DOS calls performed by RTKernel are:

      0x30    Get DOS Version
      0x25    Set Interrupt Vector
      0x35    Get Interrupt Vector
      0x1A    Set DTA
      0x2F    Get DTA
      0x50    Set PSP
      0x51    Get PSP
      0x34    Get InDOS flag

   All system calls listed above must be supported by your DOS-system.
   If you need no file-I/O, DTA and PSP functions may be dummy
   (i.e., GetXXX should return the value used in the last SetXXX). If you
   do not need DOS critical error handlers, function 0x34 may be dummy
   (i.e. returning NULL)

   RTK_DOS  (default: 1 (True))
   With symbol RTK_DOS set to 0, RTKernel's DOS-protection is not available.
   Also, Interrupt-Tasks or any other use of environment variables are
   not supported. You should use this option when you do not need DOS in more
   than one task or when your DOS-System is reentrant. The size of RTKernel
   is reduced significantly, when this option is used.

   The following Hardware/BIOS/DOS dependencies of RTKernel remain, even
   when RTK_DOS is set to 0:

   Interrupt 0x2F  The multiplex interrupt must be supported. It is
                   sufficient to initialise vector 0x2F to point to an
                   IRET instruction at boot time.

   exit()          RTKernel calls exit(1) when its encounters a fatal
                   error.

   Interrupt       The port address of the interrupt controller must be
   Controller      0x20. To change it, modify the constant "RTKInt_Master"
                   in file RTKERNEL.C.

   To recompile RTKernel, use batch file MAKELIBS.BAT                     */


#ifndef MIN_PRIO
   #define MIN_PRIO  1
#endif
#ifndef MAX_PRIO
   #define MAX_PRIO 64      /* may be changed to any value up to 255.     */
#endif                      /* However, priorities need time and space    */

#ifndef MAX_USER_DATA_ENTRIES
   #define MAX_USER_DATA_ENTRIES 8
#endif

#ifndef RTK_LOCAL_TCB
   #define RTK_LOCAL_TCB 0  /* no statically allocated TCBs */
#endif
#if RTK_LOCAL_TCB
   #ifndef MAXTASKS
      #define MAXTASKS  16  /* or whatever you need         */
   #endif
#else
   #undef MAXTASKS          /* unlimited number of tasks    */
#endif

#ifndef RTK_DOS
   #define RTK_DOS 1
#endif
